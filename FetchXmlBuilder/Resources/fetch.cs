//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=4.8.3928.0.
// 
namespace Rappen.XTB.FetchXmlBuilder {
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("fetch", Namespace="", IsNullable=false)]
    public partial class FetchType {
        
        private FetchEntityType itemField;
        
        private bool aggregateField;
        
        private bool aggregateFieldSpecified;
        
        private string aggregatelimitField;
        
        private string countField;
        
        private FetchTypeDatasource datasourceField;
        
        private bool datasourceFieldSpecified;
        
        private bool distinctField;
        
        private bool distinctFieldSpecified;
        
        private bool latematerializeField;
        
        private bool latematerializeFieldSpecified;
        
        private bool nolockField;
        
        private bool nolockFieldSpecified;
        
        private string optionsField;
        
        private string pageField;
        
        private string pagingcookieField;
        
        private bool returntotalrecordcountField;
        
        private bool returntotalrecordcountFieldSpecified;
        
        private string topField;
        
        private bool useraworderbyField;
        
        private bool useraworderbyFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("entity")]
        public FetchEntityType Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool aggregate {
            get {
                return this.aggregateField;
            }
            set {
                this.aggregateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool aggregateSpecified {
            get {
                return this.aggregateFieldSpecified;
            }
            set {
                this.aggregateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string aggregatelimit {
            get {
                return this.aggregatelimitField;
            }
            set {
                this.aggregatelimitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FetchTypeDatasource datasource {
            get {
                return this.datasourceField;
            }
            set {
                this.datasourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool datasourceSpecified {
            get {
                return this.datasourceFieldSpecified;
            }
            set {
                this.datasourceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool distinct {
            get {
                return this.distinctField;
            }
            set {
                this.distinctField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool distinctSpecified {
            get {
                return this.distinctFieldSpecified;
            }
            set {
                this.distinctFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool latematerialize {
            get {
                return this.latematerializeField;
            }
            set {
                this.latematerializeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool latematerializeSpecified {
            get {
                return this.latematerializeFieldSpecified;
            }
            set {
                this.latematerializeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("no-lock")]
        public bool nolock {
            get {
                return this.nolockField;
            }
            set {
                this.nolockField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool nolockSpecified {
            get {
                return this.nolockFieldSpecified;
            }
            set {
                this.nolockFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string page {
            get {
                return this.pageField;
            }
            set {
                this.pageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("paging-cookie")]
        public string pagingcookie {
            get {
                return this.pagingcookieField;
            }
            set {
                this.pagingcookieField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool returntotalrecordcount {
            get {
                return this.returntotalrecordcountField;
            }
            set {
                this.returntotalrecordcountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returntotalrecordcountSpecified {
            get {
                return this.returntotalrecordcountFieldSpecified;
            }
            set {
                this.returntotalrecordcountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string top {
            get {
                return this.topField;
            }
            set {
                this.topField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool useraworderby {
            get {
                return this.useraworderbyField;
            }
            set {
                this.useraworderbyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useraworderbySpecified {
            get {
                return this.useraworderbyFieldSpecified;
            }
            set {
                this.useraworderbyFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchEntityType {
        
        private object[] itemsField;
        
        private string nameField;
        
        private bool enableprefilteringField;
        
        private bool enableprefilteringFieldSpecified;
        
        private string prefilterparameternameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("all-attributes", typeof(FetchAllAttributesType))]
        [System.Xml.Serialization.XmlElementAttribute("attribute", typeof(FetchAttributeType))]
        [System.Xml.Serialization.XmlElementAttribute("filter", typeof(FetchFilterType))]
        [System.Xml.Serialization.XmlElementAttribute("link-entity", typeof(FetchLinkEntityType))]
        [System.Xml.Serialization.XmlElementAttribute("order", typeof(FetchOrderType))]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool enableprefiltering {
            get {
                return this.enableprefilteringField;
            }
            set {
                this.enableprefilteringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableprefilteringSpecified {
            get {
                return this.enableprefilteringFieldSpecified;
            }
            set {
                this.enableprefilteringFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string prefilterparametername {
            get {
                return this.prefilterparameternameField;
            }
            set {
                this.prefilterparameternameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchAllAttributesType {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchConditionValueType {
        
        private string uinameField;
        
        private string uitypeField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uiname {
            get {
                return this.uinameField;
            }
            set {
                this.uinameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uitype {
            get {
                return this.uitypeField;
            }
            set {
                this.uitypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchConditionType {
        
        private FetchConditionValueType[] itemsField;
        
        private string attributeField;
        
        private string entitynameField;
        
        private @operator operatorField;
        
        private string valueField;
        
        private string valueofField;
        
        private string aliasField;
        
        private bool uihiddenField;
        
        private bool uihiddenFieldSpecified;
        
        private string uinameField;
        
        private string uitypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("value")]
        public FetchConditionValueType[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string attribute {
            get {
                return this.attributeField;
            }
            set {
                this.attributeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string entityname {
            get {
                return this.entitynameField;
            }
            set {
                this.entitynameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public @operator @operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string valueof {
            get {
                return this.valueofField;
            }
            set {
                this.valueofField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool uihidden {
            get {
                return this.uihiddenField;
            }
            set {
                this.uihiddenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uihiddenSpecified {
            get {
                return this.uihiddenFieldSpecified;
            }
            set {
                this.uihiddenFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uiname {
            get {
                return this.uinameField;
            }
            set {
                this.uinameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uitype {
            get {
                return this.uitypeField;
            }
            set {
                this.uitypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum @operator {
        
        /// <remarks/>
        eq,
        
        /// <remarks/>
        neq,
        
        /// <remarks/>
        ne,
        
        /// <remarks/>
        gt,
        
        /// <remarks/>
        ge,
        
        /// <remarks/>
        le,
        
        /// <remarks/>
        lt,
        
        /// <remarks/>
        like,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("not-like")]
        notlike,
        
        /// <remarks/>
        @in,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("not-in")]
        notin,
        
        /// <remarks/>
        between,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("not-between")]
        notbetween,
        
        /// <remarks/>
        @null,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("not-null")]
        notnull,
        
        /// <remarks/>
        yesterday,
        
        /// <remarks/>
        today,
        
        /// <remarks/>
        tomorrow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-seven-days")]
        lastsevendays,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-seven-days")]
        nextsevendays,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-week")]
        lastweek,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("this-week")]
        thisweek,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-week")]
        nextweek,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-month")]
        lastmonth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("this-month")]
        thismonth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-month")]
        nextmonth,
        
        /// <remarks/>
        on,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("on-or-before")]
        onorbefore,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("on-or-after")]
        onorafter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-year")]
        lastyear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("this-year")]
        thisyear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-year")]
        nextyear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-x-hours")]
        lastxhours,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-x-hours")]
        nextxhours,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-x-days")]
        lastxdays,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-x-days")]
        nextxdays,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-x-weeks")]
        lastxweeks,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-x-weeks")]
        nextxweeks,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-x-months")]
        lastxmonths,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-x-months")]
        nextxmonths,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("olderthan-x-months")]
        olderthanxmonths,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("olderthan-x-years")]
        olderthanxyears,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("olderthan-x-weeks")]
        olderthanxweeks,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("olderthan-x-days")]
        olderthanxdays,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("olderthan-x-hours")]
        olderthanxhours,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("olderthan-x-minutes")]
        olderthanxminutes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-x-years")]
        lastxyears,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-x-years")]
        nextxyears,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("eq-userid")]
        equserid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ne-userid")]
        neuserid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("eq-userteams")]
        equserteams,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("eq-useroruserteams")]
        equseroruserteams,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("eq-useroruserhierarchy")]
        equseroruserhierarchy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("eq-useroruserhierarchyandteams")]
        equseroruserhierarchyandteams,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("eq-businessid")]
        eqbusinessid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ne-businessid")]
        nebusinessid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("eq-userlanguage")]
        equserlanguage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("this-fiscal-year")]
        thisfiscalyear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("this-fiscal-period")]
        thisfiscalperiod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-fiscal-year")]
        nextfiscalyear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-fiscal-period")]
        nextfiscalperiod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-fiscal-year")]
        lastfiscalyear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-fiscal-period")]
        lastfiscalperiod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-x-fiscal-years")]
        lastxfiscalyears,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-x-fiscal-periods")]
        lastxfiscalperiods,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-x-fiscal-years")]
        nextxfiscalyears,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-x-fiscal-periods")]
        nextxfiscalperiods,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in-fiscal-year")]
        infiscalyear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in-fiscal-period")]
        infiscalperiod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in-fiscal-period-and-year")]
        infiscalperiodandyear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in-or-before-fiscal-period-and-year")]
        inorbeforefiscalperiodandyear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in-or-after-fiscal-period-and-year")]
        inorafterfiscalperiodandyear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("begins-with")]
        beginswith,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("not-begin-with")]
        notbeginwith,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ends-with")]
        endswith,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("not-end-with")]
        notendwith,
        
        /// <remarks/>
        under,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("eq-or-under")]
        eqorunder,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("not-under")]
        notunder,
        
        /// <remarks/>
        above,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("eq-or-above")]
        eqorabove,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("contain-values")]
        containvalues,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("not-contain-values")]
        notcontainvalues,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchFilterType {
        
        private object[] itemsField;
        
        private FetchFilterTypeType typeField;
        
        private FetchFilterTypeHint hintField;
        
        private bool hintFieldSpecified;
        
        private bool isquickfindfieldsField;
        
        private bool isquickfindfieldsFieldSpecified;
        
        private bool overridequickfindrecordlimitdisabledField;
        
        private bool overridequickfindrecordlimitdisabledFieldSpecified;
        
        private bool overridequickfindrecordlimitenabledField;
        
        private bool overridequickfindrecordlimitenabledFieldSpecified;
        
        public FetchFilterType() {
            this.typeField = FetchFilterTypeType.and;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("condition", typeof(FetchConditionType))]
        [System.Xml.Serialization.XmlElementAttribute("filter", typeof(FetchFilterType))]
        [System.Xml.Serialization.XmlElementAttribute("link-entity", typeof(FetchLinkEntityType))]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(FetchFilterTypeType.and)]
        public FetchFilterTypeType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FetchFilterTypeHint hint {
            get {
                return this.hintField;
            }
            set {
                this.hintField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hintSpecified {
            get {
                return this.hintFieldSpecified;
            }
            set {
                this.hintFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool isquickfindfields {
            get {
                return this.isquickfindfieldsField;
            }
            set {
                this.isquickfindfieldsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isquickfindfieldsSpecified {
            get {
                return this.isquickfindfieldsFieldSpecified;
            }
            set {
                this.isquickfindfieldsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool overridequickfindrecordlimitdisabled {
            get {
                return this.overridequickfindrecordlimitdisabledField;
            }
            set {
                this.overridequickfindrecordlimitdisabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool overridequickfindrecordlimitdisabledSpecified {
            get {
                return this.overridequickfindrecordlimitdisabledFieldSpecified;
            }
            set {
                this.overridequickfindrecordlimitdisabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool overridequickfindrecordlimitenabled {
            get {
                return this.overridequickfindrecordlimitenabledField;
            }
            set {
                this.overridequickfindrecordlimitenabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool overridequickfindrecordlimitenabledSpecified {
            get {
                return this.overridequickfindrecordlimitenabledFieldSpecified;
            }
            set {
                this.overridequickfindrecordlimitenabledFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchLinkEntityType {
        
        private object[] itemsField;
        
        private string nameField;
        
        private string toField;
        
        private string fromField;
        
        private string aliasField;
        
        private FetchLinkEntityTypeLinktype linktypeField;
        
        private bool linktypeFieldSpecified;
        
        private bool intersectField;
        
        private bool intersectFieldSpecified;
        
        private bool enableprefilteringField;
        
        private bool enableprefilteringFieldSpecified;
        
        private string prefilterparameternameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("all-attributes", typeof(FetchAllAttributesType))]
        [System.Xml.Serialization.XmlElementAttribute("attribute", typeof(FetchAttributeType))]
        [System.Xml.Serialization.XmlElementAttribute("filter", typeof(FetchFilterType))]
        [System.Xml.Serialization.XmlElementAttribute("link-entity", typeof(FetchLinkEntityType))]
        [System.Xml.Serialization.XmlElementAttribute("order", typeof(FetchOrderType))]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string to {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string from {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("link-type")]
        public FetchLinkEntityTypeLinktype linktype {
            get {
                return this.linktypeField;
            }
            set {
                this.linktypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool linktypeSpecified {
            get {
                return this.linktypeFieldSpecified;
            }
            set {
                this.linktypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intersect {
            get {
                return this.intersectField;
            }
            set {
                this.intersectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intersectSpecified {
            get {
                return this.intersectFieldSpecified;
            }
            set {
                this.intersectFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool enableprefiltering {
            get {
                return this.enableprefilteringField;
            }
            set {
                this.enableprefilteringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableprefilteringSpecified {
            get {
                return this.enableprefilteringFieldSpecified;
            }
            set {
                this.enableprefilteringFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string prefilterparametername {
            get {
                return this.prefilterparameternameField;
            }
            set {
                this.prefilterparameternameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchAttributeType {
        
        private AggregateType aggregateField;
        
        private bool aggregateFieldSpecified;
        
        private string aliasField;
        
        private DateGroupingType dategroupingField;
        
        private bool dategroupingFieldSpecified;
        
        private bool distinctField;
        
        private bool distinctFieldSpecified;
        
        private bool groupbyField;
        
        private bool groupbyFieldSpecified;
        
        private string nameField;
        
        private FetchAttributeTypeRowaggregate rowaggregateField;
        
        private bool rowaggregateFieldSpecified;
        
        private bool usertimezoneField;
        
        private bool usertimezoneFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public AggregateType aggregate {
            get {
                return this.aggregateField;
            }
            set {
                this.aggregateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool aggregateSpecified {
            get {
                return this.aggregateFieldSpecified;
            }
            set {
                this.aggregateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DateGroupingType dategrouping {
            get {
                return this.dategroupingField;
            }
            set {
                this.dategroupingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dategroupingSpecified {
            get {
                return this.dategroupingFieldSpecified;
            }
            set {
                this.dategroupingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool distinct {
            get {
                return this.distinctField;
            }
            set {
                this.distinctField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool distinctSpecified {
            get {
                return this.distinctFieldSpecified;
            }
            set {
                this.distinctFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool groupby {
            get {
                return this.groupbyField;
            }
            set {
                this.groupbyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool groupbySpecified {
            get {
                return this.groupbyFieldSpecified;
            }
            set {
                this.groupbyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FetchAttributeTypeRowaggregate rowaggregate {
            get {
                return this.rowaggregateField;
            }
            set {
                this.rowaggregateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rowaggregateSpecified {
            get {
                return this.rowaggregateFieldSpecified;
            }
            set {
                this.rowaggregateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool usertimezone {
            get {
                return this.usertimezoneField;
            }
            set {
                this.usertimezoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool usertimezoneSpecified {
            get {
                return this.usertimezoneFieldSpecified;
            }
            set {
                this.usertimezoneFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum AggregateType {
        
        /// <remarks/>
        count,
        
        /// <remarks/>
        countcolumn,
        
        /// <remarks/>
        sum,
        
        /// <remarks/>
        avg,
        
        /// <remarks/>
        min,
        
        /// <remarks/>
        max,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum DateGroupingType {
        
        /// <remarks/>
        day,
        
        /// <remarks/>
        week,
        
        /// <remarks/>
        month,
        
        /// <remarks/>
        quarter,
        
        /// <remarks/>
        year,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fiscal-period")]
        fiscalperiod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fiscal-year")]
        fiscalyear,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum FetchAttributeTypeRowaggregate {
        
        /// <remarks/>
        CountChildren,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchOrderType {
        
        private object[] itemsField;
        
        private string attributeField;
        
        private string aliasField;
        
        private bool descendingField;
        
        private string entitynameField;
        
        public FetchOrderType() {
            this.descendingField = false;
        }
        
        /// <remarks/>
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string attribute {
            get {
                return this.attributeField;
            }
            set {
                this.attributeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool descending {
            get {
                return this.descendingField;
            }
            set {
                this.descendingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string entityname {
            get {
                return this.entitynameField;
            }
            set {
                this.entitynameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum FetchLinkEntityTypeLinktype {
        
        /// <remarks/>
        inner,
        
        /// <remarks/>
        outer,
        
        /// <remarks/>
        any,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("not any")]
        notany,
        
        /// <remarks/>
        all,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("not all")]
        notall,
        
        /// <remarks/>
        exists,
        
        /// <remarks/>
        @in,
        
        /// <remarks/>
        matchfirstrowusingcrossapply,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum FetchFilterTypeType {
        
        /// <remarks/>
        and,
        
        /// <remarks/>
        or,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum FetchFilterTypeHint {
        
        /// <remarks/>
        union,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum FetchTypeDatasource {
        
        /// <remarks/>
        retained,
    }
}
